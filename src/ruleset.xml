<?xml version="1.0"?>
<ruleset name="oliup">
    <description>The Oliup Coding Standards</description>

    <exclude-pattern>*/otpl_done/*</exclude-pattern>
    <exclude-pattern>*/blate_cache/*</exclude-pattern>
    <exclude-pattern>*/.gobl/*</exclude-pattern>
    <exclude-pattern>*/*.js</exclude-pattern>
    <exclude-pattern>*/*.css</exclude-pattern>
    <exclude-pattern>*/*.xml</exclude-pattern>
    <exclude-pattern>*/vendor/*</exclude-pattern>
    <exclude-pattern>*/ignore/*</exclude-pattern>
    <exclude-pattern>*/node_modules/*</exclude-pattern>

    <arg name="report" value="summary"/>
    <arg name="colors"/>
    <arg value="p"/>

    <ini name="memory_limit" value="128M"/>

    <rule ref="PSR12">
        <exclude name="Generic.WhiteSpace.DisallowTabIndent"/>
    </rule>

	<rule ref="Generic.WhiteSpace.DisallowSpaceIndent"/>

    <rule ref="Generic.WhiteSpace.ScopeIndent">
        <properties>
            <property name="indent" value="4"/>
            <property name="tabIndent" value="true"/>
        </properties>
    </rule>

    <!-- Only allow short array syntax -->
    <rule ref="Generic.Arrays.DisallowLongArraySyntax"/>

    <!-- Discourages the use of deprecated, forbidden functions that are kept in PHP for compatibility. -->
    <rule ref="Generic.PHP.DeprecatedFunctions"/>
    <rule ref="Squiz.PHP.DiscouragedFunctions"/>
    <rule ref="Generic.PHP.ForbiddenFunctions"/>

    <!-- Throws an error or warning when any code prefixed with an asperand is encountered. -->
    <rule ref="Generic.PHP.NoSilencedErrors"/>

    <!-- Warns about code that can never been executed. -->
    <rule ref="Squiz.PHP.NonExecutableCode"/>

    <!-- Checks for usage of "$this" in static methods, which will cause runtime errors. -->
    <rule ref="Squiz.Scope.StaticThisUsage"/>

    <!-- We use one space instead and allow newlines -->
    <rule ref="Squiz.Strings.ConcatenationSpacing">
        <properties>
            <property name="spacing" value="1"/>
            <property name="ignoreNewlines" value="true"/>
        </properties>
    </rule>

    <!-- Makes sure that any strings that are "echoed" are not enclosed in brackets like a function call. -->
    <rule ref="Squiz.Strings.EchoedStrings"/>

    <!-- Checks the separation between methods in a class or interface. -->
    <rule ref="Squiz.WhiteSpace.FunctionOpeningBraceSpace"/>

    <!-- All language constructs must contain a single space between themselves and their content. -->
    <rule ref="Squiz.WhiteSpace.LanguageConstructSpacing"/>

    <!-- Verifies that operators have valid spacing surrounding them. -->
    <rule ref="Squiz.WhiteSpace.LogicalOperatorSpacing"/>

    <!-- Verifies that operators have valid spacing surrounding them. -->
    <rule ref="Squiz.WhiteSpace.OperatorSpacing">
        <properties>
            <property name="ignoreNewlines" value="true"/>
        </properties>
    </rule>

	<rule ref="PHPCompatibility"/>
    <config name="installed_paths" value="vendor/phpcompatibility/php-compatibility" />

    <!-- We use at least PHP7 -->

	<config name="testVersion" value="7.0-"/>
</ruleset>
